from absbox.local.china import SPV

德宝天元202301 = SPV(
    "德宝天元之信2023年第一期个人汽车抵押贷款资产支持证券"
    ,{"封包日":"2022-09-30","起息日":"2023-04-07","首次兑付日":"2023-05-26"
     ,"法定到期日":"2060-12-01","收款频率":"月末","付款频率":["每月",26]}      
    ,{"清单":[]
      ,'发行':{'资产池规模':8000000001.8}
      ,'归集表':
        [["2022-10-28",7703073351,296926650.8,39621199.84]
        ,["2022-11-28",7404682416,298390935.6,38239799.05]
        ,["2022-12-28",7068698297,335984118.4,36851240.88]
        ,["2023-01-28",6754588776,314109521.1,35270038.62]
        ,["2023-02-28",6484198542,270390234,33782877.37]
        ,["2023-03-28",6213847967,270350575.7,32518759.42]
        ,["2023-04-28",5948509320,265338646.5,31253463.48]
        ,["2023-05-28",5688705557,259803763.2,30007334.46]
        ,["2023-06-28",5428759464,259946092.9,28787675.09]
        ,["2023-07-28",5175901751,252857713.1,27564949.08]
        ,["2023-08-28",4928990804,246910947.3,26372771.15]
        ,["2023-09-28",4685294315,243696488.3,25204562.17]
        ,["2023-10-28",4448845810,236448505.8,24048073.72]
        ,["2023-11-28",4215182466,233663343.6,22921167.01]
        ,["2023-12-28",3985947347,229235118.7,21803634.86]
        ,["2024-01-28",3759360916,226586431.3,20702493.3]
        ,["2024-02-28",3538894353,220466563.4,19610562.99]
        ,["2024-03-28",3323113360,215780992.7,18542390.48]
        ,["2024-04-28",3113335758,209777601.8,17492785.73]
        ,["2024-05-28",2907923173,205412585.4,16466179.14]
        ,["2024-06-28",2703346681,204576491.7,15458135.54]
        ,["2024-07-28",2511363265,191983415.7,14454511.7]
        ,["2024-08-28",2328011947,183351318.5,13500336.9]
        ,["2024-09-28",2154558970,173452976.8,12579982.71]
        ,["2024-10-28",1987657739,166901231.6,11699767.21]
        ,["2024-11-28",1826757367,160900371.7,10848388.31]
        ,["2024-12-28",1672568344,154189022.8,10025127.3]
        ,["2025-01-28",1523301145,149267198.8,9233666.38]
        ,["2025-02-28",1391357178,131943966.8,8465915.05]
        ,["2025-03-28",1265990068,125367110.5,7781807.72]
        ,["2025-04-28",1148751455,117238613.1,7127147.05]
        ,["2025-05-28",1036382880,112368574.8,6509482.45]
        ,["2025-06-28",936394625.7,99988254.23,5914372.72]
        ,["2025-07-28",851012123.3,85382502.47,5381543.83]
        ,["2025-08-28",778711315.7,72300807.56,4921856.54]
        ,["2025-09-28",721110322.3,57600993.4,4521948.54]
        ,["2025-10-28",665295441.8,55814880.46,4193570.1]
        ,["2025-11-28",610860431.7,54435010.17,3874600.17]
        ,["2025-12-28",558006506.8,52853924.88,3562862.69]
        ,["2026-01-28",506302198.1,51704308.72,3259695.55]
        ,["2026-02-28",457913355.7,48388842.39,2962622.7]
        ,["2026-03-28",410739506.7,47173848.94,2683796.57]
        ,["2026-04-28",365271282,45468224.78,2411532.19]
        ,["2026-05-28",321236485.9,44034796.02,2148403.47]
        ,["2026-06-28",279263716.2,41972769.71,1893121.68]
        ,["2026-07-28",240177960.2,39085756.02,1648962.9]
        ,["2026-08-28",203790300.9,36387659.26,1420731.37]
        ,["2026-09-28",170218846,33571454.92,1206970.51]
        ,["2026-10-28",139622059.2,30596786.79,1008386.32]
        ,["2026-11-28",111766649.5,27855409.75,826711.04]
        ,["2026-12-28",86949691.98,24816957.49,661149.47]
        ,["2027-01-28",64671479.97,22278212,513593.06]
        ,["2027-02-28",48386675.38,16284804.59,381046.4]
        ,["2027-03-28",34169784.81,14216890.57,284519.48]
        ,["2027-04-28",22935717.42,11234067.39,200345.49]
        ,["2027-05-28",13354353.39,9581364.03,133877.2]
        ,["2027-06-28",6283905.88,7070447.52,77370.71]
        ,["2027-07-28",1919297.32,4364608.56,35979.93]
        ,["2027-08-28",0,1919297.32,10964.13]
      ]}
      ,(("分配分账户",{"余额":0})
       ,("现金储备分账户",{"余额":80_000_000.02
                         ,"类型":{"固定储备金额":80_000_000.02}})
       ,("持续购买分账户",{"余额":0}))
    ,(("A",{"当前余额":6_940_000_000
          ,"当前利率":0.027
          ,"初始余额":6_940_000_000.00
          ,"初始利率":0.027
          ,"起息日":"2023-04-03"
          ,"利率":{"固定":0.027}
          ,"债券类型":{"过手摊还":None}
                            })
      ,("次级",{"当前余额":1_060_000_002.17
             ,"当前利率":0.0
             ,"初始余额":1_060_000_002.17
             ,"初始利率":0.00
             ,"起息日":"2023-04-03"
             ,"利率":{"固定":0.0}
             ,"债券类型":{"权益":None}}))
    ,(("宝马金融服务商费用",{"类型":{"年化费率":[("资产池余额",),0.01]},"起始日":"2023-04-07"})
      ,("宝马金融",{"类型":{"固定费用":0},"起始日":"2023-04-07"})
      ,("执行费用", {"类型":{"周期费用":["月初",15000]},"起始日":"2023-04-07"}))
    ,{"未违约":[
          ["账户转移",'持续购买分账户',"分配分账户"]
         ,["账户转移",'现金储备分账户',"分配分账户"]
         ,["支付费用","分配分账户",["执行费用"],["支持账户",'现金储备分账户']]
         ,["支付费用","分配分账户",["宝马金融服务商费用"],["支持账户",'现金储备分账户']]
         #,["支付费用",["分配分账户",'现金储备分账户'],["服务商费用"]]
         ,["计提支付利息","分配分账户",["A"]]
         ,["计提支付利息","现金储备分账户",["A"]]
         ,["条件执行"
          ,[("账户余额","分配分账户"),"<",("债券余额","A")] 
          ,["账户转移","分配分账户",'现金储备分账户',{"储备":"缺口"}]]
         
         ,["条件执行"  # 循环期条件
           ,["同时满足"
             ,["<=","2024-05-26"]
             ,[("资产池累计违约率",) ,"<=",0.016]]
           ,["账户转移","分配分账户",'持续购买分账户',{"公式":("差额",("债券余额",),("资产池余额",))}]
           ,["购买资产",["Current|Defaulted",1.0,0],"持续购买分账户",None]
           ,["支付收益","分配分账户","次级"] ]
         ,["条件执行" # 循环期结束后的分配
           ,["任一满足"
             ,[">","2024-05-26"]
             ,[("资产池累计违约率",) ,">",0.016]]
            ,["支付本金","分配分账户",["A"]]
            ,["支付本金","分配分账户",["次级"]]
            ,["支付费用收益", "分配分账户", "宝马金融"]]]
     ,"回款后":[["计提费用","宝马金融服务商费用"]]
     ,"清仓回购":[["出售资产", ["Current|Defaulted",1.0,0], "分配分账户"]
                 ,["计提支付利息","分配分账户",["A"]]
                 ,["支付本金","分配分账户",["A"]]
                 ,["支付本金","分配分账户",["次级"]]
                 ,["支付费用收益", "分配分账户", "宝马金融"]]
     }
    ,(["利息回款","分配分账户"]
      ,["本金回款","分配分账户"]
      ,["早偿回款","分配分账户"]
      ,["回收回款","分配分账户"])
    ,None
    ,None
    ,None
    ,None
    ,("设计","摊销")
)


# if __name__ == '__main__':
#     from absbox import API
#     localAPI = API("https://absbox.org/api/latest")
#     
#     
#     revol_asset = ["Mortgage"
#                     ,{"originBalance":220,"originRate":["fix",0.043],"originTerm":48
#                       ,"freq":"Monthly","type":"Level","originDate":"2021-07-01"}
#                       ,{"currentBalance":220
#                       ,"currentRate":0.043
#                       ,"remainTerm":36
#                       ,"status":"current"}]
# 
#     r = localAPI.run(德宝天元202301,
#               runAssump = [
#                   ("revolving"
#                     ,["constant",revol_asset]
#                     ,("Pool",("Mortgage",{"CDR":0.01},None,None,None)
#                               ,None
#                               ,None))
#                   ,("call",{"bondFactor":0.05})
#                   ,("report",{"dates":"MonthEnd"})
#               ],
#               poolAssump = ("Pool",("Mortgage",{"CDR":0.0012},None,None,None)
#                               ,None
#                               ,None)
#               ,read=True)
#     
#     # view pool balance changes
#     r['pool']['flow']['余额'].iloc[2:,].plot.area(rot=45
#                                                  ,title="循环资产池余额变化"
#                                                  ,ylabel="资产池余额"
#                                                  )
#     # view balance sheet
#     bs = r['result']['report']['balanceSheet']
#     
#     # view capital structure
#     col_to_keep = [('asset', 'Pool Performing')
#                    ,('asset', '现金储备分账户')
#                    ,('liability', 'A')
#                    ,('liability', '次级')
#                    #,('ratio',"A-OC")
#                   ]
#     start_index = 25
#     chart = bs.iloc[start_index:50,][col_to_keep].plot.area(rot=45,stacked=True,secondary_y=['OC-A'])
#     chart.set_title("资产负债结构")
    
    
    ## scenario analysis on revolving
    #rates = (0.043,0.065)
    #terms = ((24,12),(48,36))
    #
    #rAssets = [["Mortgage"
    #           ,{"originBalance":220,"originRate":["fix",r],"originTerm":t[0]
    #           ,"freq":"Monthly","type":"Level","originDate":"2021-07-01"}
    #           ,{"currentBalance":220
    #           ,"currentRate":r
    #           ,"remainTerm":t[1]
    #           ,"status":"current"}]
    #           for r in rates 
    #           for t in terms ]
    #
    #revol_low_rate_short_term, revol_low_rate_long_term, revol_high_rate_short_term, revol_high_rate_long_term = rAssets
    #
    #scenarios=[("low_rate_long_term",revol_low_rate_long_term)
    #          ,("low_rate_short_term",revol_low_rate_short_term)
    #          ,("high_rate_long_term",revol_high_rate_long_term)
    #          ,("high_rate_short_term",revol_high_rate_short_term)]
    #
    #base_assumption = [{"CDR":0.0012}
    #                   ,{"清仓":[{"债券余额剩余比率":0.05}]}
    #                   ,{"FinancialReports":{"dates":"MonthEnd"}}]
    #
    #multiScenario = {k:base_assumption+[{"RevolvingAssets":[["constant",[v]]
    #                                                        ,[{"CDR":0.0012}]]}] 
    #                   for (k,v) in scenarios}
    #
    ## scenario run
    #rm = localAPI.run(德宝天元202301,
    #                   assumptions=multiScenario,
    #                   pricing= {"贴现日":"2023-05-26","贴现曲线":[["2020-01-01",0.0275]]},
    #                   read=True)
    #
    ## view scenario run result
    #import pandas
    #pandas.DataFrame.from_dict(
    #    {scenarioName:
    #        (f"{result['fees']['宝马金融服务商费用']['支付'].sum().round(2):,}"
    #         ,f"{result['bonds']['次级']['利息'].sum().round(2):,}"
    #         ,f"{result['fees']['宝马金融']['支付'].sum().round(2):,}"
    #         ,f"{result['pricing'].loc['A']['WAL']}")
    #        for (scenarioName,result) in rm.items()}
    #     , orient='index'
    #     , columns=["服务商费用"
    #                ,"次级超额收益"
    #                ,"原始权益人剩余收益"
    #                ,"优先级平均期限"])
    
